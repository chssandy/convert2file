import logging
import tempfile
import io
from docx import Document
import markdown
import pypandoc
from xhtml2pdf import pisa

from tools.utils import file_util

def get_pdf_bytes(input_text: str, output_filetype: str, output_extension: str) -> bytes:
    # with tempfile.NamedTemporaryFile(suffix='.html', delete=True) as tmpfile:
    #     output = pypandoc.convert_text(
    #         source=input_text,
    #         to="html",
    #         format="markdown+tex_math_dollars",
    #         outputfile=tmpfile.name,
    #         extra_args=["--mathjax","--mathml"],
    #         # extra_args=["--mimetex"],  # 图片方式输出公式
    #         # extra_args=["--mathml"],
    #         encoding="utf-8"
    #     )
    #     if output:
    #         raise RuntimeError(f"Pandoc error: {output}")

    #     # 重新加载 .docx 文件
    #     doc = Document(tmpfile.name)

    # if file_util.is_contains_chinese_chars(input_text):
    #     doc = file_util.set_chinese_fonts(doc)

    # 保存到 BytesIO
    # result_bytes_io = io.BytesIO()
    # doc.save(result_bytes_io)
    # result_file_bytes = result_bytes_io.getvalue()

    # html = pypandoc.convert_text(
    #     source=input_text,
    #     to="html",
    #     format="markdown+tex_math_dollars",
    #     extra_args=["--mathjax","--mathml"],
    #     encoding="utf-8"
    # )
    
    # print(f"---------------input_text: {html}")
    # # html = markdown.markdown(text=input_text, extensions=["extra", "toc"])


    # 使用 python-markdown 和 python-markdown-math 处理 Markdown 文本
    html = markdown.markdown(
        text=input_text,
        extensions=['markdown.extensions.extra', 'markdown.extensions.mathjax']
    )

    CSS_FOR_TABLE = """
    <!-- CSS for table -->
    <style>
        table, th, td {
            border: 1px solid;
        }
        table {
            width: 100%;
        }
    </style>
    """
    html = f"""
        {html}
        {CSS_FOR_TABLE}
        """ if "<table>" in html else html
    print(f"------1111---------input_text: {html}")
    font_families = ",".join(
        [
            "Sans-serif",  # for English
            "STSong-Light",  # for Simplified Chinese
            "MSung-Light",  # for Traditional Chinese
            "HeiseiMin-W3",  # for Japanese
        ]
    )
    css_style = f"""
    <style>
        html {{
            -pdf-word-wrap: CJK;
            font-family:  "{font_families}"; 
        }}
    </style>
    """

    html_str = f"""
    {css_style}
    {html}
    """
    print(f"--------222222-------input_text: {html_str}")
    result_file_bytes = pisa.CreatePDF(
        src=html_str,
        dest_bytes=True,  # pass the generated bytes in return
        encoding="utf-8",
    )
   
    return result_file_bytes
    
